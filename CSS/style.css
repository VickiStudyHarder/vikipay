:root {
    --color-primary: #2584ff;
    --color-secondary: #00d9ff;
    --color-accent: #ff3400;
    --color-headings: #1b0760;
    --color-body: #918ca4;

}

/* Typography */

html {
    font-size: 62.5%;

}

body {
    font-family: Inter, Arial, Helvetica, sans-serif;
    color: var(--color-body);
    font-size: 2.4rem;
    line-height: 1.5;

}

h1,
h2,
h3 {
    color: var(--color-headings);
    margin-bottom: 1rem;
}

h1 {
    font-size: 7rem;
}

h2 {
    font-size: 4rem;
}

h3 {
    font-size: 3rem;
}

p {
    margin-top: 0;
}

@media screen and (min-width: 1024px) {
    body {
        font-size: 1.8rem;
    }

    h1 {
        font-size: 8rem;
    }

    h2 {
        font-size: 4rem;
    }

    h3 {
        font-size: 2.4rem;
    }

}

/* Link */

a {
    text-decoration: none;
}

.link-arrow {
    color: var(--color-accent);
    text-transform: uppercase;
    font-size: 2rem;
    font-weight: bold;
}

.link-arrow:after {
    content: '-->';
    margin-left: 5px;
    /* px is used to ensure the space is fi xed in any case */
    transition: margin 0.15s;
}

/* select the feature after link arrow at hover state */
.link-arrow:hover::after {
    margin-left: 10px;
}

@media screen and (min-width: 1024px) {
    .link-arrow {
        font-size: 1.5rem;
    }


}

/* Badges */
/* we have badges in different size and different color */
/* use object oriented CSS method to separate structure from skin */
.badge {
    border-radius: 20px;
    font-size: 2rem;
    font-weight: 600;
    padding: 0.5rem 2rem;
    white-space: nowrap;
    /* the badge won't wrap into second line*/
}

/* use BEM naming conversion to separate component from modifier */
.badge--primary {
    background: var(--color-primary);
    color: #fff;
}

.badge--secondary {
    background: var(--color-secondary);
    color: #fff;
}

.badge--small {
    font-size: 1.6rem;
}

@media screen and (min-width :1024px) {
    .badge {
        font-size: 1.5rem;
    }

    .badge--small {
        font-size: 1.2rem;
    }

}

/* lists */
.list {
    list-style: none;
    padding-left: 0;
    color: var(--color-headings);
}

/* convert each list item to inline element */
.list--inline .list__item {
    display: inline-block;
    margin-right: 2rem;
}

.list--tick {
    list-style-image: url(/images/tick.svg);
    padding-left: 3rem;
}

/* good place to use nesting selector, cause we only apply it here */
.list--tick .list__item {
    padding: 0.5rem;
    margin-bottom: 1rem;
}

@media screen and (min-width:1024px) {
    .list--tick .list__item {
        padding-left: 0;
    }
}